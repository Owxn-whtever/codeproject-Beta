#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <SPI.h>

// ‚ö° WiFi Credentials
const char* ssid = "Owxn";            
const char* password = "Owxn2409";    

// ‚ö° Telegram Bot Tokens ‡πÅ‡∏•‡∏∞ Chat IDs
const String botTokens[] = {
    "7713083064:AAFNzaIMmlDjwM6nyl6z1eAwkKHY1Zcnu9Q",
    "7702438986:AAEeokB03nKz0Y9s7Vs4VWi-U7pzHHVO8v8",
    "8175471471:AAG3IpS62xQb_2pR-ZwfZnH_aVMy5ekjukw"
};
const int numBots = sizeof(botTokens) / sizeof(botTokens[0]);

const String chatIds[][2] = { 
    {"-4734652541"}, // ‡∏ö‡∏≠‡∏ó 1
    {"-4767274518"},   // ‡∏ö‡∏≠‡∏ó 2
    {"6928484464"}    // ‡∏ö‡∏≠‡∏ó 3
};
const int chatCounts[] = {2, 2, 2}; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô chat ‡∏ï‡πà‡∏≠‡∏ö‡∏≠‡∏ó

// ‚ö° ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ GPIO ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö IR Sensors (‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å‡∏°‡∏µ 2 ‡∏ï‡∏±‡∏ß)
const int numDrawers = 5;  // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å
const int irSensorPins[numDrawers][2] = { 
    {D1, D2}, {D3, D4}, {D5, D6}, {D7, D8}, {D9, D10} 
}; 

bool previousState[numDrawers][2];  
unsigned long lastTriggerTime[numDrawers][2]; 
const unsigned long debounceTime = 5000;  // 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á)

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Telegram Bot
WiFiClientSecure client;
UniversalTelegramBot* bots[numBots];

// ‚ö° **WiFi & Telegram Bot Initialization**
void setup() {
    Serial.begin(115200);
    SPI.begin();

    Serial.print("üîó Connecting to WiFi");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println("\n‚úÖ WiFi Connected!");
    Serial.print("üì° IP Address: ");
    Serial.println(WiFi.localIP());

    // ‚ö° ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Telegram Bots
    client.setInsecure();
    for (int i = 0; i < numBots; i++) {
        bots[i] = new UniversalTelegramBot(botTokens[i], client);
    }

    // ‚ö° ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ IR Sensors
    for (int i = 0; i < numDrawers; i++) {
        for (int j = 0; j < 2; j++) {
            pinMode(irSensorPins[i][j], INPUT);
            previousState[i][j] = digitalRead(irSensorPins[i][j]);
            lastTriggerTime[i][j] = 0;
        }
    }
}

// ‚ö° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
void sendNotificationToSpecificBot(int botIndex, const String& message) {
    if (WiFi.status() != WL_CONNECTED) {
        Serial.println("‚ùå WiFi ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠");
        return;
    }

    Serial.println("üì© Sending notification...");
    for (int chatIndex = 0; chatIndex < chatCounts[botIndex]; chatIndex++) {
        Serial.print("‚û° Sending to Chat ID: ");
        Serial.println(chatIds[botIndex][chatIndex]);

        bool sent = bots[botIndex]->sendMessage(chatIds[botIndex][chatIndex], message, "Markdown");
        if (sent) {
            Serial.println("‚úÖ Notification sent successfully!");
        } else {
            Serial.println("‚ùå Failed to send notification. Error: " + String(bots[botIndex]->_lastError));
        }
    }
}

// ‚ö° Loop ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
void loop() {
    for (int i = 0; i < numDrawers; i++) {
        bool currentState[2] = { digitalRead(irSensorPins[i][0]), digitalRead(irSensorPins[i][1]) };
        unsigned long currentTime = millis();

        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 1 ‡πÑ‡∏õ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 2 ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ "‡πÄ‡∏Ç‡πâ‡∏≤"
        if (previousState[i][0] == HIGH && currentState[0] == LOW) {
            lastTriggerTime[i][0] = currentTime;
        }
        if (previousState[i][1] == HIGH && currentState[1] == LOW) {
            if (currentTime - lastTriggerTime[i][0] < debounceTime) {
                Serial.println("üì• Document ENTERED in drawer " + String(i + 1));
                sendNotificationToSpecificBot(0, "üì• ‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡πÉ‡∏ô‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å‡∏ó‡∏µ‡πà " + String(i + 1));
            }
        }

        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 2 ‡πÑ‡∏õ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 1 ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ "‡∏≠‡∏≠‡∏Å"
        if (previousState[i][1] == HIGH && currentState[1] == LOW) {
            lastTriggerTime[i][1] = currentTime;
        }
        if (previousState[i][0] == HIGH && currentState[0] == LOW) {
            if (currentTime - lastTriggerTime[i][1] < debounceTime) {
                Serial.println("üì§ Document EXITED from drawer " + String(i + 1));
                sendNotificationToSpecificBot(0, "üì§ ‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡πâ‡∏ô‡∏ä‡∏±‡∏Å‡∏ó‡∏µ‡πà " + String(i + 1));
            }
        }

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå
        previousState[i][0] = currentState[0];
        previousState[i][1] = currentState[1];
    }

    delay(500); // ‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Loop
}
